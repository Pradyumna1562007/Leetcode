// using cyclic sort
class Solution {
    public int missingNumber(int[] arr) {
        int i = 0;
        while(i<arr.length){
            if (arr[i]<arr.length && arr[i]!=arr[arr[i]]) {
                swap(arr,i,arr[i]);
            } else {
                i++;
            } 
        }
        for(int j=0; j<arr.length; j++){
            if(arr[j]!=j){
                return j;
            }
            

    
    }return arr.length;
    }
    static void swap(int[] arr, int first, int last){
        int temp = arr[first];
        arr[first] = arr[last];
        arr[last] = temp;
    }
}


// using brain
class Solution {
    public int missingNumber(int[] nums) {
        int total = 0;
        for(int n : nums){
            total = total +n ;
        }

       int sum = nums.length* (nums.length +1) /2 ;
        return sum - total;
    }
}
