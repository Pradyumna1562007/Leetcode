class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> ans = new ArrayList<>();
        cyclicSort(nums);
        for (int i=1;i<=nums.length;i++){
            if(nums[i-1]!=i){
                ans.add(nums[i-1]);
            }
       } return ans;
    }
    void cyclicSort(int[] nums){
        int i = 0;
        while(i<nums.length){
            int correct =  nums[i]-1;
            if (nums[i]!=nums[correct]) {
                swap(nums,i,correct);
            } else {
                i++;
            } 
        }
    }
    void swap(int[] nums, int first, int last){
        int temp = nums[first];
        nums[first] = nums[last];
        nums[last] = temp;
    }
}
